{"version":3,"sources":["components/OysterHeader/index.js","components/OysterHeader/OysterHeader.js","components/KPI/KPI.js","components/KPI/WindKPI.js","components/KPI/HumidityKPI.js","components/KPI/RainKPI.js","content/LandingPage/index.js","content/LandingPage/LandingPage.js","components/TrendChart/TrendChart.js","components/TrendChart/index.js","content/TrendsPage/index.js","content/TrendsPage/TrendsPage.js","App.js","serviceWorker.js","index.js"],"names":["OysterHeader","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","element","Link","to","prefix","HeaderNavigation","HeaderMenuItem","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","href","HeaderGlobalBar","HeaderGlobalAction","KPI","props","state","title","fieldname","fieldvalue","fieldtimestamp","fieldunits","fieldextra","data","error","console","log","newProps","this","setState","timeStamp","now","Date","secondsPast","getTime","parseInt","day","getDate","month","toDateString","match","replace","getFullYear","obj","value","ago","JSON","parse","timeSince","timestamp","updateFieldValue","prevProps","prevState","snapshot","update","className","getIcon","Component","defaultProps","WindKPI","direction","gust","windd","Math","round","newvalue","HumidityKPI","RainKPI","LandingPage","fetch","method","headers","process","then","response","json","stringify","getLatest","Breadcrumb","noTrailingSlash","BreadcrumbItem","TrendChart","x","y","hints","_onMouseLeave","_onNearestX","index","yunits","xtitle","ytitle","height","xType","map","hint","type","icon","faExclamationTriangle","moment","format","TrendsPage","url","URL","params","measure","timeframe","Object","keys","forEach","key","searchParams","append","dataset","metadata","getTrends","App","Content","exact","path","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c3a2665.chunk.js","sourcesContent":["import OysterHeader from './OysterHeader';\nexport default OysterHeader;\n","import React from 'react';\nimport {\n  Header,\n  HeaderContainer,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  HeaderSideNavItems,\n} from 'carbon-components-react';\nimport {\n  AppSwitcher20,\n  Notification20,\n  UserAvatar20,\n} from '@carbon/icons-react';\nimport { Link } from 'react-router-dom';\n\nconst OysterHeader = () => (\n  <HeaderContainer\n    render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n      <Header aria-label=\"Oyster Haven\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName element={Link} to=\"/\" prefix=\"\">\n          Oyster Haven\n        </HeaderName>\n        <HeaderNavigation aria-label=\"Oyster Haven\">\n          <HeaderMenuItem element={Link} to=\"/trends\">\n            Trends\n          </HeaderMenuItem>\n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem href=\"/trends\">Trends</HeaderMenuItem>\n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n        <HeaderGlobalBar>\n          <HeaderGlobalAction aria-label=\"Notifications\">\n            <Notification20 />\n          </HeaderGlobalAction>\n          <HeaderGlobalAction aria-label=\"User Avatar\">\n            <UserAvatar20 />\n          </HeaderGlobalAction>\n          <HeaderGlobalAction aria-label=\"App Switcher\">\n            <AppSwitcher20 />\n          </HeaderGlobalAction>\n        </HeaderGlobalBar>\n      </Header>\n    )}\n  />\n);\n\nexport default OysterHeader;\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Temperature32 } from '@carbon/icons-react';\n\nclass KPI extends Component {\n  state = {};\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.title,\n      fieldname: props.fieldname,\n      fieldvalue: props.fieldvalue,\n      fieldtimestamp: props.fieldtimestamp,\n      fieldunits: props.fieldunits,\n      fieldextra: props.fieldextra,\n      data: props.data,\n      error: null,\n    };\n  }\n\n  // Lifecycle methods\n  componentDidMount() {\n    console.log('KPI mounted');\n  }\n\n  componentWillUnmount() {\n    console.log('KPI unmounted');\n  }\n  componentWillReceiveProps(newProps) {\n    this.setState({ data: newProps.data });\n  }\n\n  timeSince(timeStamp) {\n    console.log('Timestamp: ' + timeStamp);\n    var now = new Date(),\n      secondsPast = now.getTime() / 1000 - timeStamp;\n    console.log('Now: ' + now.getTime());\n    console.log('Seconds: ' + secondsPast);\n    if (secondsPast < 60) {\n      return parseInt(secondsPast) + 's';\n    }\n    if (secondsPast < 3600) {\n      return parseInt(secondsPast / 60) + 'm';\n    }\n    if (secondsPast <= 86400) {\n      return parseInt(secondsPast / 3600) + 'h';\n    }\n    if (secondsPast > 86400) {\n      // convert to days\n      return parseInt(secondsPast / (3600 * 24)) + ' days';\n    }\n    \n    if (secondsPast > 86400) {\n      const day = timeStamp.getDate();\n      const month = timeStamp\n        .toDateString()\n        .match(/ [a-zA-Z]*/)[0]\n        .replace(' ', '');\n      console.log(\"Month: \"+month)\n      const year =\n        timeStamp.getFullYear() === now.getFullYear()\n          ? ''\n          : ' ' + timeStamp.getFullYear();\n      return day + ' ' + month + year;\n    }\n  }\n\n  updateFieldValue(obj, value, ago) {\n\n    this.setState({\n      fieldvalue: value,\n      fieldtimestamp: ago,\n    });\n\n  }\n\n  update(data) {\n    console.log('Refreshing KPI Data');\n\n    // Look for the field name from the properties\n    if (data) {\n      console.log(this.state.data);\n      try {\n        const obj = JSON.parse(this.state.data);\n        if (obj[this.state.fieldname]) {\n          console.log('Updating: ' + this.state.fieldname);\n          // Get \"ago\" relative time difference\n\n          const ago =\n            'Last Updated ' +\n            this.timeSince(obj[this.state.fieldname].timestamp) +\n            ' ago';\n\n          this.updateFieldValue(obj, obj[this.state.fieldname].value, ago)\n\n        } else {\n          //console.log(\"Could not find fieldname of '\" + this.state.fieldname + \"' in data set\")\n        }\n      } catch {\n        console.log('Could not parse data object');\n      }\n    } else {\n      console.log('KPI Data invalid');\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //console.log(\"KPI updated\")\n    if (prevState.data !== this.state.data) {\n      this.update(this.state.data);\n    }\n  }\n\n  getIcon() {\n    return <Temperature32 />\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-widget-parent\">\n          <div className=\"my-widget-top\">\n            <div className=\"my-widget-top-left\">\n              <div className=\"my-widget-title\">\n                {this.state.title && <div>{this.state.title}</div>}\n              </div>\n              <div className=\"my-widget-value\">\n                {this.state.fieldvalue && <div>{this.state.fieldvalue}</div>}\n                <span className=\"my-widget-currency\">\n                  {this.state.fieldunits && <div>{this.state.fieldunits}</div>}\n                </span>\n              </div>\n            </div>\n            <div className=\"my-widget-top-right\">\n              {this.getIcon()}\n            </div>\n          </div>\n          <div className=\"my-widget-bottom\">\n            <div className=\"my-widget-bottom-left\">\n              {this.state.fieldtimestamp && (\n                <div>{this.state.fieldtimestamp}</div>\n              )}\n            </div>\n\n            <div className=\"my-widget-bottom-right\">\n              {this.state.fieldextra && <div>{this.state.fieldextra}</div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nKPI.defaultProps = {\n  title: 'KPI',\n  fieldname: 'temp',\n  fieldvalue: 'N/A',\n  fieldtimestamp: 'N/A',\n  fieldunits: 'º',\n  fieldextra: '',\n  data: '',\n};\n\nexport { KPI };\n","\nimport { KPI } from './KPI';\nimport { Windy32 } from '@carbon/icons-react';\nclass WindKPI extends KPI {\n\n    updateFieldValue(obj, value, ago) {\n\n        var direction = ' - '\n        var gust = '0'\n        const headings = [\"N\",\"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\",\"SE\",\"SSE\",\"S\",\"SSW\",\"SW\",\"WSW\",\"W\",\"WNW\",\"NW\",\"NNW\",\"N\"]\n\n        if (obj['windd']) {\n            const windd = obj['windd'].value       \n            const index = Math.round(windd/ 22.5,0)+1\n            direction = headings[index]\n        }\n        if (obj['windgust']) {\n            gust = obj['windgust'].value\n        }\n\n\n        const newvalue = `${direction} Gusting at ${gust} mph`\n        this.setState({\n            fieldvalue: value,\n            fieldtimestamp: ago,\n            fieldextra: newvalue\n        });\n\n    }\n\n    getIcon() {\n        return <Windy32 />\n      }\n\n\n}\n\nexport { WindKPI };","\nimport { KPI } from './KPI';\nimport { Humidity32 } from '@carbon/icons-react';\nclass HumidityKPI extends KPI {\n\n\n\n    getIcon() {\n        return <Humidity32 />\n      }\n\n\n}\n\nexport { HumidityKPI };","\nimport { KPI } from './KPI';\nimport { Rain32 } from '@carbon/icons-react';\nclass RainKPI extends KPI {\n\n\n\n    getIcon() {\n        return <Rain32 />\n      }\n\n\n}\n\nexport { RainKPI };","import LandingPage from './LandingPage';\nexport default LandingPage;\n","import React from 'react';\nimport { Component } from 'react';\n\nimport { Breadcrumb, BreadcrumbItem } from 'carbon-components-react';\n\nimport { KPI, WindKPI, RainKPI, HumidityKPI } from '../../components/KPI';\n\nclass LandingPage extends Component {\n  state = {\n    data: '',\n    value: 0,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      value: 0,\n    };\n  }\n\n  getLatest() {\n    const headers = { 'x-api-key': process.env.REACT_APP_OYSTER_HAVEN_QUERY };\n    try {\n      fetch(\n        'https://ed4b9t53ua.execute-api.us-east-1.amazonaws.com/prod/latest',\n        {\n          method: 'GET',\n          headers,\n        }\n      )\n        .then(response => response.json())\n        .then(json => {\n          console.log(json);\n          this.setState(() => {\n            return {\n              data: JSON.stringify(json),\n            };\n          });\n        });\n    } catch (error) {\n      console.log('Error: ' + error);\n    }\n  }\n  // Lifecycle methods\n  componentDidMount() {\n    console.log('Landing Page mounted');\n    this.getLatest();\n\n    /*\n    this.timerID = setInterval(\n      () => this.getLatest(),\n      1000 * 60 * 15\n    );\n    */\n\n  }\n\n  componentWillUnmount() {\n    console.log('Landing Page unmounted');\n  }\n\n  render() {\n    return (\n      <div className=\"bx--grid bx--grid--full-width landing-page\">\n        <div className=\"bx--row landing-page__banner\">\n          <div className=\"bx--col-lg-16\">\n            <Breadcrumb noTrailingSlash>\n              <BreadcrumbItem>\n                <a href=\"/\">Current Conditions</a>\n              </BreadcrumbItem>\n            </Breadcrumb>\n            <h1 className=\"landing-page__heading\">Oyster Haven</h1>\n          </div>\n        </div>\n        <div className=\"bx--row landing-page__r3\">\n          <div className=\"bx--col-md-4 bx--col-lg-4\">\n            <KPI\n              title=\"Temperature\"\n              fieldname=\"temp\"\n              fieldunits=\"º\"\n              data={this.state.data}\n            />\n          </div>\n          <div className=\"bx--col-md-4 bx--col-lg-4\">\n            <HumidityKPI\n              title=\"Relative Humidity\"\n              fieldname=\"rh\"\n              fieldunits=\"%\"\n              data={this.state.data}\n            />\n          </div>\n          <div className=\"bx--col-md-4 bx--col-lg-4\">\n            <WindKPI\n              title=\"Wind\"\n              fieldname=\"wind\"\n              fieldunits=\"mph\"\n              data={this.state.data}\n            />\n          </div>\n          <div className=\"bx--col-md-4 bx--col-lg-4\">\n            <RainKPI\n              title=\"Rain\"\n              fieldname=\"rainfall\"\n              fieldunits='\"'\n              data={this.state.data}\n            />\n          </div>\n        </div>\n        <div className=\"bx--row landing-page__r3\">\n          <div className=\"bx--col-md-4 bx--col-lg-4\">\n            <KPI\n              title=\"Water Temperature\"\n              fieldname=\"watertemp\"\n              fieldunits=\"º\"\n              data={this.state.data}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from 'react';\nimport { Component } from 'react';\nimport moment from 'moment';\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n    FlexibleWidthXYPlot,\n    XAxis,\n    YAxis,\n    HorizontalGridLines,\n    VerticalGridLines,\n    LineSeries,\n    Hint\n} from 'react-vis';\n\n\nclass TrendChart extends Component {\n    state = {\n        data: [{ x: 0, y: 0 }],\n        hints: [],\n    };\n    constructor(props) {\n        super(props);\n        // Check everything to see what is needed\n        this.state = {\n            title: props.title,\n            yunits: props.yunits,\n            data: props.data,\n            hints: props.hints,\n            xtitle: props.xtitle,\n            ytitle: props.ytitle,\n            error: null\n        };\n    }\n\n    // Lifecycle methods\n    componentDidMount() {\n        console.log('Trend Chart mounted');\n    }\n\n    componentWillUnmount() {\n        console.log('Trend Chart unmounted');\n    }\n\n    \n    componentWillReceiveProps(newProps) {\n        this.setState({ data: newProps.data, hints: newProps.hints, xtitle: newProps.xtitle, ytitle: newProps.ytitle, yunits: newProps.yunits });\n    }\n\n\n    /**\n     * Event handler for onMouseLeave.\n     * @private\n     */\n    _onMouseLeave = () => {\n       \n    };\n\n    /**\n     * Event handler for onNearestX.\n     * @param {Object} value Selected value.\n     * @param {index} index Index of the value in the data array.\n     * @private\n     */\n    _onNearestX = (value, { index }) => {\n        \n    };\n\n    render() {\n        return (\n                <FlexibleWidthXYPlot\n                    height={300}\n                    xType=\"time\"\n                >\n                    <HorizontalGridLines />\n                    <VerticalGridLines />\n                    <XAxis title={this.state.xtitle} />\n                    <YAxis title={this.state.ytitle} />\n                    <LineSeries\n                        data={this.state.data}\n                    />\n                    \n                    {this.state.hints.map((hint, index) => (\n                        <Hint key={hint[hint.type].x} value={hint[hint.type]}>\n                            <div className=\"hint\">\n                                <div><FontAwesomeIcon icon={faExclamationTriangle} /></div>\n                                <div>{hint[hint.type].y} {this.state.fieldunits}</div>\n                                <div>{moment(hint[hint.type].x).format(\"MM-DD-YYYY h:mm:ss\")}</div>\n                            </div>\n                        </Hint>\n                    ))\n                    }\n                </FlexibleWidthXYPlot>\n        );\n    }\n}\n\nTrendChart.defaultProps = {\n    title: 'Trend Chart',\n    xtitle: 'N/A',\n    ytitle: 'N/A',\n    yunits: 'º',\n    data: [{ x: 0, y: 0 }],\n    hints: []\n};\n\n\nexport default TrendChart;\n","import TrendChart from './TrendChart';\nexport default TrendChart;\n","import TrendsPage from './TrendsPage';\nexport default TrendsPage;","import React from 'react';\nimport { Component } from 'react';\n\nimport TrendChart from '../../components/TrendChart';\n\nclass TrendsPage extends Component {\n\n\n  state = {\n    data: [{ x: 0, y: 0 }],\n    hints: [],\n    yunits: '',\n    xtitle: '',\n    ytitle: ''\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{ x: 0, y: 0 }],\n      hints: [],\n      yunits: '',\n      xtitle: '',\n      ytitle: ''\n    };\n  }\n\n  getTrends() {\n    const headers = { 'x-api-key': process.env.REACT_APP_OYSTER_HAVEN_QUERY };\n    try {\n      var url = new URL(\"https://ed4b9t53ua.execute-api.us-east-1.amazonaws.com/prod/historical\"),\n        params = { measure: \"watertemp\", timeframe: 1 }\n      Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n      fetch(\n        url,\n        {\n          method: 'GET',\n          headers,\n        }\n      )\n        .then(response => response.json())\n        .then(json => {\n          console.log(json);\n          this.setState(() => {\n            return {\n              data: json.dataset,\n              hints: json.hints,\n              ytitle: json.metadata.ytitle,\n              yunits: json.metadata.yunits,\n              xtitle: 'Month to Date'\n            };\n          });\n        });\n    } catch (error) {\n      console.log('Error: ' + error);\n    }\n  }\n\n  // Lifecycle methods\n  componentDidMount() {\n    console.log('TrendsPage mounted');\n    this.getTrends()\n\n\n  }\n\n  componentWillUnmount() {\n    console.log('Trends Page unmounted');\n  }\n\n  render() {\n\n    return (\n      <div className=\"bx--grid bx--grid--full-width trends-page\">\n        <div className=\"bx--row trends-page__banner\">\n          <div className=\"bx--col-lg-16\">\n            <h1 className=\"trends-page__heading\">Latest Trends</h1>\n          </div>\n        </div>\n        <div className=\"bx--row trends-page__r3\">\n          <TrendChart\n            title=\"Temperature\"\n            yunits={this.state.yunits}\n            ytitle={this.state.ytitle}\n            xtitle={this.state.xtitle}\n            data={this.state.data}\n            hints={this.state.hints}\n          />\n        </div>\n        <div className=\"bx--row trends-page__r3\">\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TrendsPage;\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport OysterHeader from './components/OysterHeader';\nimport { Content } from 'carbon-components-react';\nimport { Route, Switch } from 'react-router-dom';\nimport LandingPage from './content/LandingPage';\nimport TrendsPage from './content/TrendsPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <OysterHeader />\n        <Content>\n          <Switch>\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route path=\"/trends\" component={TrendsPage} />\n          </Switch>\n        </Content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'core-js/modules/es7.array.includes';\nimport 'core-js/modules/es6.array.fill';\nimport 'core-js/modules/es6.string.includes';\nimport 'core-js/modules/es6.string.trim';\nimport 'core-js/modules/es7.object.values';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}